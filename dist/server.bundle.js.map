{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/event-pubsub/es5.js","webpack:///./node_modules/event-pubsub/es6.js","webpack:///./node_modules/event-pubsub/event-pubsub.js","webpack:///./node_modules/js-message/Message.js","webpack:///./node_modules/js-queue/queue.js","webpack:///./node_modules/node-ipc/dao/client.js","webpack:///./node_modules/node-ipc/dao/socketServer.js","webpack:///./node_modules/node-ipc/entities/Defaults.js","webpack:///./node_modules/node-ipc/entities/EventParser.js","webpack:///./node_modules/node-ipc/node-ipc.js","webpack:///./node_modules/node-ipc/services/IPC.js","webpack:///./src/lib/raycast/RayCastMap.ts","webpack:///./src/lib/raycast/constantsAndTypes.ts","webpack:///./src/lib/ship0.ts","webpack:///./src/server/raycast/getMaterializedMap.ts","webpack:///./src/server/raycast/getRay.ts","webpack:///./src/server/raycast/getRays.ts","webpack:///./src/server/raycast/updatePositionsAndGetRaysAndMakeVisibleMap.ts","webpack:///./src/server/server-handlers.js","webpack:///./src/server/server-ipc.js","webpack:///./src/server/server.js","webpack:///external \"dgram\"","webpack:///external \"fs\"","webpack:///external \"net\"","webpack:///external \"os\"","webpack:///external \"tls\"","webpack:///external \"util\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEbkBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC9Ia;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AClGa;;AAEb,kBAAkB,mBAAO,CAAC,iDAAO;AACjC;AACA,kBAAkB,mBAAO,CAAC,iDAAO;AACjC;;AAEA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3Ea;;AAEb,YAAY,mBAAO,CAAC,gBAAK;AACzB,UAAU,mBAAO,CAAC,gBAAK;AACvB,kBAAkB,mBAAO,CAAC,mFAA4B;AACtD,cAAc,mBAAO,CAAC,wDAAY;AAClC,SAAS,mBAAO,CAAC,cAAI;AACrB,YAAY,mBAAO,CAAC,kDAAU;;AAE9B,aAAa,mBAAO,CAAC,4DAAkB;AACvC;AACA,aAAa,mBAAO,CAAC,iEAAc;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAA+C;AAC3E;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChQA,iDAAa;;AAEb,YAAY,mBAAO,CAAC,gBAAK;AACzB,UAAU,mBAAO,CAAC,gBAAK;AACvB,SAAS,mBAAO,CAAC,cAAI;AACrB,YAAY,mBAAO,CAAC,oBAAO;AAC3B,kBAAkB,mBAAO,CAAC,mFAA4B;AACtD,cAAc,mBAAO,CAAC,wDAAY;;AAElC,aAAa,mBAAO,CAAC,4DAAkB;AACvC;AACA,aAAa,mBAAO,CAAC,iEAAc;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA,KAAK;AACL,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,+CAA+C,UAAU;AACzD;AACA;AACA;AACA,KAAK;AACL,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6CAA6C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACjZa;;AAEb,sCAAsC,iBAAiB;;AAEvD;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,cAAI;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/Ea;;AAEb,iBAAiB,mBAAO,CAAC,mEAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/Ba;;AAEb,YAAY,mBAAO,CAAC,kEAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpBa;;AAEb,iBAAiB,mBAAO,CAAC,6EAAyB;AAClD,aAAa,mBAAO,CAAC,+DAAkB;AACvC,aAAa,mBAAO,CAAC,2EAAwB;AAC7C,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/adam/Programming/electron-react-typescript-webpack-boilerplate\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/server.js\");\n","'use strict';\n\nfunction EventPubSub() {\n    this._events_={};\n    this.publish=this.trigger=this.emit=emit;\n    this.subscribe=this.on=on;\n    this.once=once;\n    this.unSubscribe=this.off=off;\n    this.emit$=emit$;\n\n    function on(type,handler,once){\n        if(!handler){\n            throw new ReferenceError('handler not defined.');\n        }\n\n        if(!this._events_[type]){\n            this._events_[type]=[];\n        }\n\n        if(once){\n            handler._once_ = once;\n        }\n        this._events_[type].push(handler);\n        return this;\n    }\n\n    function once(type,handler){\n        return this.on(type, handler, true);\n    }\n\n    function off(type,handler){\n        if(!this._events_[type]){\n            return this;\n        }\n\n        if(!handler){\n            throw new ReferenceError('handler not defined. if you wish to remove all handlers from the event please pass \"*\" as the handler');\n        }\n\n        if(handler=='*'){\n            delete this._events_[type];\n            return this;\n        }\n\n        var handlers=this._events_[type];\n\n        while(handlers.includes(handler)){\n            handlers.splice(\n                handlers.indexOf(handler),\n                1\n            );\n        }\n\n        if(handlers.length<1){\n            delete this._events_[type];\n        }\n\n        return this;\n    }\n\n    function emit(type){\n        this.emit$.apply(this, arguments);\n        if(!this._events_[type]){\n            return this;\n        }\n        arguments.splice=Array.prototype.splice;\n        arguments.splice(0,1);\n\n        var handlers=this._events_[type];\n        var onceHandled=[];\n\n        for(var i in handlers){\n            var handler=handlers[i];\n            handler.apply(this, arguments);\n            if(handler._once_){\n              onceHandled.push(handler);\n            }\n        }\n\n        for(var i in onceHandled){\n            this.off(\n              type,\n              onceHandled[i]\n            );\n        }\n\n        return this;\n    }\n\n    function emit$(type, args){\n        if(!this._events_['*']){\n            return this;\n        }\n\n        var catchAll=this._events_['*'];\n\n        args.shift=Array.prototype.shift;\n        args.shift(type);\n\n        for(var handler of catchAll){\n            handler.apply(this, args);\n        }\n\n        return this;\n    }\n\n    return this;\n}\n\nif (!Array.prototype.includes) {\n  Array.prototype.includes = function(searchElement /*, fromIndex*/) {\n    'use strict';\n    if (this == null) {\n      throw new TypeError('Array.prototype.includes called on null or undefined');\n    }\n\n    var O = Object(this);\n    var len = parseInt(O.length, 10) || 0;\n    if (len === 0) {\n      return false;\n    }\n    var n = parseInt(arguments[1], 10) || 0;\n    var k;\n    if (n >= 0) {\n      k = n;\n    } else {\n      k = len + n;\n      if (k < 0) {k = 0;}\n    }\n    var currentElement;\n    while (k < len) {\n      currentElement = O[k];\n      if (searchElement === currentElement ||\n         (searchElement !== searchElement && currentElement !== currentElement)) { // NaN !== NaN\n        return true;\n      }\n      k++;\n    }\n    return false;\n  };\n}\n\nmodule.exports=EventPubSub;\n","'use strict';\n\nclass EventPubSub {\n    constructor( scope ) {\n        this._events_ = {};\n        this.publish = this.trigger = this.emit;\n        this.subscribe = this.on;\n        this.unSubscribe = this.off;\n    }\n\n    on( type, handler, once ) {\n        if ( !handler ) {\n            throw new ReferenceError( 'handler not defined.' );\n        }\n\n        if ( !this._events_[ type ] ) {\n            this._events_[ type ] = [];\n        }\n\n         if(once){\n            handler._once_ = once;\n        }\n\n        this._events_[ type ].push( handler );\n        return this;\n    }\n\n    once( type, handler ) {\n        return this.on( type, handler, true );\n    }\n\n    off( type, handler ) {\n        if ( !this._events_[ type ] ) {\n            return this;\n        }\n\n        if ( !handler ) {\n            throw new ReferenceError( 'handler not defined. if you wish to remove all handlers from the event please pass \"*\" as the handler' );\n        }\n\n        if ( handler == '*' ) {\n            delete this._events_[ type ];\n            return this;\n        }\n\n        const handlers = this._events_[ type ];\n\n        while ( handlers.includes( handler ) ) {\n            handlers.splice(\n                handlers.indexOf( handler ),\n                1\n            );\n        }\n\n        if ( handlers.length < 1 ) {\n            delete this._events_[ type ];\n        }\n\n        return this;\n    }\n\n    emit( type, ...args ) {\n        if ( !this._events_[ type ] ) {\n            return this.emit$( type, ...args );\n        }\n\n        const handlers = this._events_[ type ];\n        const onceHandled=[];\n\n        for ( let handler of handlers ) {\n            handler.apply( this, args );\n            if(handler._once_){\n              onceHandled.push(handler);\n            }\n        }\n\n        for(let handler of onceHandled){\n          this.off(type,handler);\n        }\n\n        return this.emit$( type, ...args );\n    }\n\n    emit$( type, ...args ) {\n        if ( !this._events_[ '*' ] ) {\n            return this;\n        }\n\n        const catchAll = this._events_[ '*' ];\n\n        for ( let handler of catchAll ) {\n            handler.call( this, type, ...args );\n        }\n\n        return this;\n    }\n}\n\nmodule.exports = EventPubSub;\n","'use strict';\n\nlet EventPubSub = require('./es5');\nif(process.version[1]>5){\n    EventPubSub = require('./es6');\n}\n\nmodule.exports=EventPubSub;\n","function Message() {\n    Object.defineProperties(\n        this, {\n            data: {\n                enumerable: true,\n                get: getData,\n                set: setData\n            },\n            type: {\n                enumerable: true,\n                get: getType,\n                set: setType\n            },\n            load:{\n                enumarable:true,\n                writable:false,\n                value:parse\n            },\n            JSON: {\n                enumerable: true,\n                get: getJSON\n            }\n        }\n    );\n\n    var type = '';\n    var data = {};\n\n    function getType() {\n        return type;\n    }\n\n    function getData() {\n        return data;\n    }\n\n    function getJSON() {\n        return JSON.stringify(\n            {\n                type: type,\n                data: data\n            }\n        );\n    }\n\n    function setType(value) {\n        type = value;\n    }\n\n    function setData(value) {\n        data = value;\n    }\n\n    function parse(message){\n        try{\n            var message=JSON.parse(message);\n            type=message.type;\n            data=message.data;\n        }catch(err){\n            var badMessage=message;\n            type='error',\n            data={\n                message:'Invalid JSON response format',\n                err:err,\n                response:badMessage\n            }\n        }\n    }\n}\n\nmodule.exports=Message;\n","function Queue(asStack){\n    Object.defineProperties(\n        this,\n        {\n            add:{\n                enumerable:true,\n                writable:false,\n                value:addToQueue\n            },\n            next:{\n                enumerable:true,\n                writable:false,\n                value:run\n            },\n            clear:{\n                enumerable:true,\n                writable:false,\n                value:clearQueue\n            },\n            contents:{\n                enumerable:false,\n                get:getQueue,\n                set:setQueue\n            },\n            autoRun:{\n                enumerable:true,\n                writable:true,\n                value:true\n            },\n            stop:{\n                enumerable:true,\n                writable:true,\n                value:false\n            }\n        }\n    );\n\n    var queue=[];\n    var running=false;\n    var stop=false;\n\n    function clearQueue(){\n        queue=[];\n        return queue;\n    }\n\n    function getQueue(){\n        return queue;\n    }\n\n    function setQueue(val){\n        queue=val;\n        return queue;\n    }\n\n    function addToQueue(){\n        for(var i in arguments){\n            queue.push(arguments[i]);\n        }\n        if(!running && !this.stop && this.autoRun){\n            this.next();\n        }\n    }\n\n    function run(){\n        running=true;\n        if(queue.length<1 || this.stop){\n            running=false;\n            return;\n        }\n\n        queue.shift().bind(this)();\n    }\n}\n\nmodule.exports=Queue;\n","'use strict';\n\nconst net = require('net'),\n    tls = require('tls'),\n    EventParser = require('../entities/EventParser.js'),\n    Message = require('js-message'),\n    fs = require('fs'),\n    Queue = require('js-queue');\n\nlet Events = require('event-pubsub/es5');\nif(process.version[1]>4){\n    Events = require('event-pubsub');\n}\n\nlet eventParser = new EventParser();\n\nclass Client extends Events{\n    constructor(config,log){\n        super();\n        Object.assign(\n            this,\n            {\n                Client  : Client,\n                config  : config,\n                queue   : new Queue,\n                socket  : false,\n                connect : connect,\n                emit    : emit,\n                log     : log,\n                retriesRemaining:config.maxRetries||0,\n                explicitlyDisconnected: false\n            }\n        );\n\n        eventParser=new EventParser(this.config);\n    }\n}\n\nfunction emit(type,data){\n    this.log('dispatching event to ', this.id, this.path, ' : ', type, ',', data);\n\n    let message=new Message;\n    message.type=type;\n    message.data=data;\n\n    if(this.config.rawBuffer){\n        message=new Buffer(type,this.config.encoding);\n    }else{\n        message=eventParser.format(message);\n    }\n\n    if(!this.config.sync){\n        this.socket.write(message);\n        return;\n    }\n\n    this.queue.add(\n        syncEmit.bind(this,message)\n    );\n}\n\nfunction syncEmit(message){\n    this.log('dispatching event to ', this.id, this.path, ' : ', message);\n    this.socket.write(message);\n}\n\nfunction connect(){\n    //init client object for scope persistance especially inside of socket events.\n    let client=this;\n\n    client.log('requested connection to ', client.id, client.path);\n    if(!this.path){\n        client.log('\\n\\n######\\nerror: ', client.id ,' client has not specified socket path it wishes to connect to.');\n        return;\n    }\n\n    const options={};\n\n    if(!client.port){\n        client.log('Connecting client on Unix Socket :', client.path);\n\n        options.path=client.path;\n\n        if (process.platform ==='win32' && !client.path.startsWith('\\\\\\\\.\\\\pipe\\\\')){\n            options.path = options.path.replace(/^\\//, '');\n            options.path = options.path.replace(/\\//g, '-');\n            options.path= `\\\\\\\\.\\\\pipe\\\\${options.path}`;\n        }\n\n        client.socket = net.connect(options);\n    }else{\n        options.host=client.path;\n        options.port=client.port;\n\n        if(client.config.interface.localAddress){\n          options.localAddress=client.config.interface.localAddress;\n        }\n\n        if(client.config.interface.localPort){\n          options.localPort=client.config.interface.localPort;\n        }\n\n        if(client.config.interface.family){\n          options.family=client.config.interface.family;\n        }\n\n        if(client.config.interface.hints){\n          options.hints=client.config.interface.hints;\n        }\n\n        if(client.config.interface.lookup){\n          options.lookup=client.config.interface.lookup;\n        }\n\n        if(!client.config.tls){\n            client.log('Connecting client via TCP to', options);\n            client.socket = net.connect(options);\n        }else{\n            client.log('Connecting client via TLS to', client.path ,client.port,client.config.tls);\n            if(client.config.tls.private){\n                client.config.tls.key=fs.readFileSync(client.config.tls.private);\n            }\n            if(client.config.tls.public){\n                client.config.tls.cert=fs.readFileSync(client.config.tls.public);\n            }\n            if(client.config.tls.trustedConnections){\n                if(typeof client.config.tls.trustedConnections === 'string'){\n                    client.config.tls.trustedConnections=[client.config.tls.trustedConnections];\n                }\n                client.config.tls.ca=[];\n                for(let i=0; i<client.config.tls.trustedConnections.length; i++){\n                    client.config.tls.ca.push(\n                        fs.readFileSync(client.config.tls.trustedConnections[i])\n                    );\n                }\n            }\n\n            Object.assign(client.config.tls,options);\n\n            client.socket = tls.connect(\n                client.config.tls\n            );\n        }\n    }\n\n    client.socket.setEncoding(this.config.encoding);\n\n    client.socket.on(\n        'error',\n        function(err){\n            client.log('\\n\\n######\\nerror: ', err);\n            client.publish('error', err);\n\n        }\n    );\n\n    client.socket.on(\n        'connect',\n        function connectionMade(){\n            client.publish('connect');\n            client.retriesRemaining=client.config.maxRetries;\n            client.log('retrying reset');\n        }\n    );\n\n    client.socket.on(\n        'close',\n        function connectionClosed(){\n            client.log('connection closed' ,client.id , client.path,\n            client.retriesRemaining, 'tries remaining of', client.config.maxRetries\n        );\n\n            if(\n                client.config.stopRetrying ||\n                client.retriesRemaining<1 ||\n                client.explicitlyDisconnected\n\n            ){\n                client.publish('disconnect');\n                client.log(\n                    (client.config.id),\n                    'exceeded connection rety amount of',\n                    ' or stopRetrying flag set.'\n                );\n\n                client.socket.destroy();\n                client.publish('destroy');\n                client=undefined;\n\n                return;\n            }\n\n            setTimeout(\n                function retryTimeout(){\n                    client.retriesRemaining--;\n                    client.connect();\n                }.bind(null,client),\n                client.config.retry\n            );\n\n            client.publish('disconnect');\n        }\n    );\n\n    client.socket.on(\n        'data',\n        function(data) {\n            client.log('## received events ##');\n            if(client.config.rawBuffer){\n                client.publish(\n                   'data',\n                   new Buffer(data,client.config.encoding)\n                );\n                if(!client.config.sync){\n                    return;\n                }\n\n                client.queue.next();\n                return;\n            }\n\n            if(!this.ipcBuffer){\n                this.ipcBuffer='';\n            }\n\n            data=(this.ipcBuffer+=data);\n\n            if(data.slice(-1)!=eventParser.delimiter || data.indexOf(eventParser.delimiter) == -1){\n                client.log('Messages are large, You may want to consider smaller messages.');\n                return;\n            }\n\n            this.ipcBuffer='';\n\n            const events = eventParser.parse(data);\n            const eCount = events.length;\n            for(let i=0; i<eCount; i++){\n                let message=new Message;\n                message.load(events[i]);\n\n                client.log('detected event', message.type, message.data);\n                client.publish(\n                   message.type,\n                   message.data\n                );\n            }\n\n            if(!client.config.sync){\n                return;\n            }\n\n            client.queue.next();\n        }\n    );\n}\n\nmodule.exports=Client;\n","'use strict';\n\nconst net = require('net'),\n    tls = require('tls'),\n    fs = require('fs'),\n    dgram = require('dgram'),\n    EventParser = require('../entities/EventParser.js'),\n    Message = require('js-message');\n\nlet Events = require('event-pubsub/es5');\nif(process.version[1]>4){\n    Events = require('event-pubsub');\n}\n\nlet eventParser = new EventParser();\n\nclass Server extends Events{\n    constructor(path,config,log,port){\n        super();\n        Object.assign(\n            this,\n            {\n                config          : config,\n                path            : path,\n                port            : port,\n                udp4            : false,\n                udp6            : false,\n                log             : log,\n                server          : false,\n                sockets         : [],\n                emit            : emit,\n                broadcast       : broadcast\n            }\n        );\n\n        eventParser=new EventParser(this.config);\n\n        this.on(\n            'close',\n            serverClosed.bind(this)\n        );\n    }\n\n    onStart(socket){\n        this.trigger(\n            'start',\n            socket\n        );\n    }\n\n    stop(){\n        this.server.close();\n    }\n\n    start(){\n        if(!this.path){\n            this.log('Socket Server Path not specified, refusing to start');\n            return;\n        }\n\n        if(this.config.unlink){\n            fs.unlink(\n                this.path,\n                startServer.bind(this)\n            );\n        }else{\n            startServer.bind(this)();\n        }\n    }\n}\n\nfunction emit(socket, type, data){\n    this.log('dispatching event to socket', ' : ', type, data);\n\n    let message=new Message;\n    message.type=type;\n    message.data=data;\n\n    if(this.config.rawBuffer){\n        this.log(this.config.encoding)\n        message=new Buffer(type,this.config.encoding);\n    }else{\n        message=eventParser.format(message);\n    }\n\n    if(this.udp4 || this.udp6){\n\n        if(!socket.address || !socket.port){\n            this.log('Attempting to emit to a single UDP socket without supplying socket address or port. Redispatching event as broadcast to all connected sockets');\n            this.broadcast(type,data);\n            return;\n        }\n\n        this.server.write(\n            message,\n            socket\n        );\n        return;\n    }\n\n    socket.write(message);\n}\n\nfunction broadcast(type,data){\n    this.log('broadcasting event to all known sockets listening to ', this.path,' : ', ((this.port)?this.port:''), type, data);\n    let message=new Message;\n    message.type=type;\n    message.data=data;\n\n    if(this.config.rawBuffer){\n        message=new Buffer(type,this.config.encoding);\n    }else{\n        message=eventParser.format(message);\n    }\n\n    if(this.udp4 || this.udp6){\n        for(let i=1, count=this.sockets.length; i<count; i++){\n            this.server.write(message,this.sockets[i]);\n        }\n    }else{\n        for(let i=0, count=this.sockets.length; i<count; i++){\n            this.sockets[i].write(message);\n        }\n    }\n}\n\nfunction serverClosed(){\n    for(let i=0, count=this.sockets.length; i<count; i++){\n        let socket=this.sockets[i];\n        let destroyedSocketId=false;\n\n        if(socket){\n            if(socket.readable){\n                continue;\n            }\n        }\n\n        if(socket.id){\n            destroyedSocketId=socket.id;\n        }\n\n        this.log('socket disconnected',destroyedSocketId.toString());\n\n        if(socket && socket.destroy){\n            socket.destroy();\n        }\n\n        this.sockets.splice(i,1);\n\n        this.publish('socket.disconnected', socket, destroyedSocketId);\n\n        return;\n    }\n}\n\nfunction gotData(socket,data,UDPSocket){\n    let sock=((this.udp4 || this.udp6)? UDPSocket : socket);\n    if(this.config.rawBuffer){\n        data=new Buffer(data,this.config.encoding);\n        this.publish(\n            'data',\n            data,\n            sock\n        );\n        return;\n    }\n\n    if(!this.ipcBuffer){\n        this.ipcBuffer='';\n    }\n\n    data=(this.ipcBuffer+=data);\n\n    if(data.slice(-1)!=eventParser.delimiter || data.indexOf(eventParser.delimiter) == -1){\n        this.log('Messages are large, You may want to consider smaller messages.');\n        return;\n    }\n\n    this.ipcBuffer='';\n\n    data=eventParser.parse(data);\n\n    while(data.length>0){\n        let message=new Message;\n        message.load(data.shift());\n\n        // Only set the sock id if it is specified.\n        if (message.data && message.data.id){\n            sock.id=message.data.id;\n        }\n\n        this.log('received event of : ',message.type,message.data);\n\n        this.publish(\n            message.type,\n            message.data,\n            sock\n        );\n    }\n}\n\nfunction socketClosed(socket){\n    this.publish(\n        'close',\n        socket\n    );\n}\n\nfunction serverCreated(socket) {\n    this.sockets.push(socket);\n\n    if(socket.setEncoding){\n        socket.setEncoding(this.config.encoding);\n    }\n\n    this.log('## socket connection to server detected ##');\n    socket.on(\n        'close',\n        socketClosed.bind(this)\n    );\n\n    socket.on(\n        'error',\n        function(err){\n            this.log('server socket error',err);\n\n            this.publish('error',err);\n        }.bind(this)\n    );\n\n    socket.on(\n        'data',\n        gotData.bind(this,socket)\n    );\n\n    socket.on(\n        'message',\n        function(msg,rinfo) {\n            if (!rinfo){\n                return;\n            }\n\n            this.log('Received UDP message from ', rinfo.address, rinfo.port);\n            let data;\n\n            if(this.config.rawSocket){\n                data=new Buffer(msg,this.config.encoding);\n            }else{\n                data=msg.toString();\n            }\n            socket.emit('data',data,rinfo);\n        }.bind(this)\n    );\n\n    this.publish(\n        'connect',\n        socket\n    );\n\n    if(this.config.rawBuffer){\n        return;\n    }\n}\n\nfunction startServer() {\n    this.log(\n        'starting server on ',this.path,\n        ((this.port)?`:${this.port}`:'')\n    );\n\n    if(!this.udp4 && !this.udp6){\n        this.log('starting TLS server',this.config.tls);\n        if(!this.config.tls){\n            this.server=net.createServer(\n                serverCreated.bind(this)\n            );\n        }else{\n            startTLSServer.bind(this)();\n        }\n    }else{\n        this.server=dgram.createSocket(\n            ((this.udp4)? 'udp4':'udp6')\n        );\n        this.server.write=UDPWrite.bind(this);\n        this.server.on(\n            'listening',\n            function UDPServerStarted() {\n                serverCreated.bind(this)(this.server);\n            }.bind(this)\n        );\n    }\n\n    this.server.on(\n        'error',\n        function(err){\n            this.log('server error',err);\n\n            this.publish(\n                'error',\n                err\n            );\n        }.bind(this)\n    );\n\n    this.server.maxConnections=this.config.maxConnections;\n\n    if(!this.port){\n        this.log('starting server as', 'Unix || Windows Socket');\n        if (process.platform ==='win32'){\n            this.path = this.path.replace(/^\\//, '');\n            this.path = this.path.replace(/\\//g, '-');\n            this.path= `\\\\\\\\.\\\\pipe\\\\${this.path}`;\n        }\n\n        this.server.listen(\n            this.path,\n            this.onStart.bind(this)\n        );\n\n        return;\n    }\n\n    if(!this.udp4 && !this.udp6){\n        this.log('starting server as', (this.config.tls?'TLS':'TCP'));\n        this.server.listen(\n            this.port,\n            this.path,\n            this.onStart.bind(this)\n        );\n        return;\n    }\n\n    this.log('starting server as',((this.udp4)? 'udp4':'udp6'));\n\n    this.server.bind(\n        this.port,\n        this.path\n    );\n\n    this.onStart(\n        {\n            address : this.path,\n            port    : this.port\n        }\n    );\n}\n\nfunction startTLSServer(){\n    this.log('starting TLS server',this.config.tls);\n    if(this.config.tls.private){\n        this.config.tls.key=fs.readFileSync(this.config.tls.private);\n    }else{\n        this.config.tls.key=fs.readFileSync(`${__dirname}/../local-node-ipc-certs/private/server.key`);\n    }\n    if(this.config.tls.public){\n        this.config.tls.cert=fs.readFileSync(this.config.tls.public);\n    }else{\n        this.config.tls.cert=fs.readFileSync(`${__dirname}/../local-node-ipc-certs/server.pub`);\n    }\n    if(this.config.tls.dhparam){\n        this.config.tls.dhparam=fs.readFileSync(this.config.tls.dhparam);\n    }\n    if(this.config.tls.trustedConnections){\n        if(typeof this.config.tls.trustedConnections === 'string'){\n            this.config.tls.trustedConnections=[this.config.tls.trustedConnections];\n        }\n        this.config.tls.ca=[];\n        for(let i=0; i<this.config.tls.trustedConnections.length; i++){\n            this.config.tls.ca.push(\n                fs.readFileSync(this.config.tls.trustedConnections[i])\n            );\n        }\n    }\n    this.server=tls.createServer(\n        this.config.tls,\n        serverCreated.bind(this)\n    );\n}\n\nfunction UDPWrite(message,socket){\n    let data=new Buffer(message, this.config.encoding);\n    this.server.send(\n        data,\n        0,\n        data.length,\n        socket.port,\n        socket.address,\n        function(err, bytes) {\n            if(err){\n                this.log('error writing data to socket',err);\n                this.publish(\n                    'error',\n                    function(err){\n                        this.publish('error',err);\n                    }\n                );\n            }\n        }\n    );\n}\n\nmodule.exports=Server;\n","'use strict';\n\n/*eslint no-magic-numbers: [\"error\", { \"ignore\": [ 0] }]*/\n\n/**\n * @module entities\n */\n\nconst os = require('os');\n\n/**\n * @class Defaults\n * @description Defaults Entity\n */\nclass Defaults{\n\n    /**\n     * @constructor\n     * @method constructor\n     * @return {void}\n     */\n    constructor(){\n\n        this.appspace='app.';\n        this.socketRoot='/tmp/';\n        this.id=os.hostname();\n\n        this.encoding='utf8';\n        this.rawBuffer=false;\n        this.sync=false;\n        this.unlink=true;\n\n        this.delimiter='\\f';\n\n        this.silent=false;\n        this.logDepth=5;\n        this.logInColor=true;\n        this.logger=console.log.bind(console);\n\n        this.maxConnections=100;\n        this.retry=500;\n        this.maxRetries=Infinity;\n        this.stopRetrying=false;\n\n        this.IPType=getIPType();\n        this.tls=false;\n        this.networkHost = (this.IPType == 'IPv6') ? '::1' : '127.0.0.1';\n        this.networkPort = 8000;\n\n        this.interface={\n            localAddress:false,\n            localPort:false,\n            family:false,\n            hints:false,\n            lookup:false\n        }\n    }\n}\n\n/**\n * method to get ip type\n *\n * @method getIPType\n * @return {string} ip type\n */\nfunction getIPType() {\n    const networkInterfaces = os.networkInterfaces();\n    let IPType = '';\n    if (networkInterfaces\n        && Array.isArray(networkInterfaces)\n        && networkInterfaces.length > 0) {\n        // getting the family of first network interface available\n        IPType = networkInterfaces [\n            Object.keys( networkInterfaces )[0]\n        ][0].family;\n    }\n    return IPType;\n}\n\nmodule.exports=Defaults;\n","'use strict';\n\nconst Defaults = require('./Defaults.js');\n\nclass Parser{\n  constructor(config){\n    if(!config){\n      config=new Defaults;\n    }\n    this.delimiter=config.delimiter;\n  }\n\n  format(message){\n    if(!message.data && message.data!==false && message.data!==0){\n        message.data={};\n    }\n    if(message.data['_maxListeners']){\n        message.data={};\n    }\n\n    message=message.JSON+this.delimiter;\n    return message;\n  }\n\n  parse(data){\n    let events=data.split(this.delimiter);\n    events.pop();\n    return events;\n  }\n}\n\nmodule.exports=Parser;\n","'use strict';\n\nconst IPC = require('./services/IPC.js');\n\nclass IPCModule extends IPC{\n    constructor(){\n        super();\n        //include IPC to make extensible\n        Object.defineProperty(\n            this,\n            'IPC',\n            {\n                enumerable:true,\n                writable:false,\n                value:IPC\n            }\n        )\n    }\n}\n\nmodule.exports=new IPCModule;\n","'use strict';\n\nconst Defaults = require('../entities/Defaults.js'),\n    Client = require('../dao/client.js'),\n    Server = require('../dao/socketServer.js'),\n    util = require('util');\n\nclass IPC{\n    constructor(){\n        Object.defineProperties(\n            this,\n            {\n                config      : {\n                    enumerable:true,\n                    writable:true,\n                    value:new Defaults\n                },\n                connectTo   : {\n                    enumerable:true,\n                    writable:false,\n                    value:connect\n                },\n                connectToNet: {\n                    enumerable:true,\n                    writable:false,\n                    value:connectNet\n                },\n                disconnect  : {\n                    enumerable:true,\n                    writable:false,\n                    value:disconnect\n                },\n                serve       : {\n                    enumerable:true,\n                    writable:false,\n                    value:serve\n                },\n                serveNet    : {\n                    enumerable:true,\n                    writable:false,\n                    value:serveNet\n                },\n                of          : {\n                    enumerable:true,\n                    writable:true,\n                    value:{}\n                },\n                server      : {\n                    enumerable:true,\n                    writable:true,\n                    configurable:true,\n                    value:false\n                },\n                log         : {\n                    enumerable:true,\n                    writable:false,\n                    value:log\n                }\n            }\n        );\n    }\n}\n\nfunction log(...args){\n    if(this.config.silent){\n        return;\n    }\n\n    for(let i=0, count=args.length; i<count; i++){\n        if(typeof args[i] != 'object'){\n            continue;\n        }\n\n        args[i]=util.inspect(\n            args[i],\n            {\n                depth:this.config.logDepth,\n                colors:this.config.logInColor\n            }\n        );\n    }\n\n    this.config.logger(\n        args.join(' ')\n    );\n}\n\nfunction disconnect(id){\n    if(!this.of[id]){\n        return;\n    }\n\n    this.of[id].explicitlyDisconnected=true;\n\n    this.of[id].off('*','*');\n    if(this.of[id].socket){\n        if(this.of[id].socket.destroy){\n            this.of[id].socket.destroy();\n        }\n    }\n\n    delete this.of[id];\n}\n\nfunction serve(path,callback){\n    if(typeof path=='function'){\n        callback=path;\n        path=false;\n    }\n    if(!path){\n        this.log(\n            'Server path not specified, so defaulting to',\n            'ipc.config.socketRoot + ipc.config.appspace + ipc.config.id',\n            this.config.socketRoot+this.config.appspace+this.config.id\n        );\n        path=this.config.socketRoot+this.config.appspace+this.config.id;\n    }\n\n    if(!callback){\n        callback=emptyCallback;\n    }\n\n    this.server=new Server(\n        path,\n        this.config,\n        log\n    );\n\n    this.server.on(\n        'start',\n        callback\n    );\n}\n\nfunction emptyCallback(){\n    //Do Nothing\n}\n\nfunction serveNet(host,port,UDPType,callback){\n    if(typeof host=='number'){\n        callback=UDPType;\n        UDPType=port;\n        port=host;\n        host=false;\n    }\n    if(typeof host=='function'){\n        callback=host;\n        UDPType=false;\n        host=false;\n        port=false;\n    }\n    if(!host){\n        this.log(\n            'Server host not specified, so defaulting to',\n            'ipc.config.networkHost',\n            this.config.networkHost\n        );\n        host=this.config.networkHost;\n    }\n    if(host.toLowerCase()=='udp4' || host.toLowerCase()=='udp6'){\n        callback=port;\n        UDPType=host.toLowerCase();\n        port=false;\n        host=this.config.networkHost;\n    }\n\n    if(typeof port=='string'){\n        callback=UDPType;\n        UDPType=port;\n        port=false;\n    }\n    if(typeof port=='function'){\n        callback=port;\n        UDPType=false;\n        port=false;\n    }\n    if(!port){\n        this.log(\n            'Server port not specified, so defaulting to',\n            'ipc.config.networkPort',\n            this.config.networkPort\n        );\n        port=this.config.networkPort;\n    }\n\n    if(typeof UDPType=='function'){\n        callback=UDPType;\n        UDPType=false;\n    }\n\n    if(!callback){\n        callback=emptyCallback;\n    }\n\n    this.server=new Server(\n        host,\n        this.config,\n        log,\n        port\n    );\n\n    if(UDPType){\n        this.server[UDPType]=true;\n        if(UDPType === \"udp4\" && host === \"::1\") {\n            // bind udp4 socket to an ipv4 address\n            this.server.path = \"127.0.0.1\";\n        }\n    }\n\n    this.server.on(\n        'start',\n        callback\n    );\n}\n\nfunction connect(id,path,callback){\n    if(typeof path == 'function'){\n        callback=path;\n        path=false;\n    }\n\n    if(!callback){\n        callback=emptyCallback;\n    }\n\n    if(!id){\n        this.log(\n            'Service id required',\n            'Requested service connection without specifying service id. Aborting connection attempt'\n        );\n        return;\n    }\n\n    if(!path){\n        this.log(\n            'Service path not specified, so defaulting to',\n            'ipc.config.socketRoot + ipc.config.appspace + id',\n            (this.config.socketRoot+this.config.appspace+id).data\n        );\n        path=this.config.socketRoot+this.config.appspace+id;\n    }\n\n    if(this.of[id]){\n        if(!this.of[id].socket.destroyed){\n            this.log(\n                'Already Connected to',\n                id,\n                '- So executing success without connection'\n            );\n            callback();\n            return;\n        }\n        this.of[id].socket.destroy();\n    }\n\n    this.of[id] = new Client(this.config,this.log);\n    this.of[id].id = id;\n    this.of[id].path = path;\n\n    this.of[id].connect();\n\n    callback(this);\n}\n\nfunction connectNet(id,host,port,callback){\n    if(!id){\n        this.log(\n            'Service id required',\n            'Requested service connection without specifying service id. Aborting connection attempt'\n        );\n        return;\n    }\n    if(typeof host=='number'){\n        callback=port;\n        port=host;\n        host=false;\n    }\n    if(typeof host=='function'){\n        callback=host;\n        host=false;\n        port=false;\n    }\n    if(!host){\n        this.log(\n            'Server host not specified, so defaulting to',\n            'ipc.config.networkHost',\n            this.config.networkHost\n        );\n        host=this.config.networkHost;\n    }\n\n    if(typeof port=='function'){\n        callback=port;\n        port=false;\n    }\n    if(!port){\n        this.log(\n            'Server port not specified, so defaulting to',\n            'ipc.config.networkPort',\n            this.config.networkPort\n        );\n        port=this.config.networkPort;\n    }\n\n    if(typeof callback == 'string'){\n        UDPType=callback;\n        callback=false;\n    }\n    if(!callback){\n        callback=emptyCallback;\n    }\n\n    if(this.of[id]){\n        if(!this.of[id].socket.destroyed){\n\n            this.log(\n                'Already Connected to',\n                id,\n                '- So executing success without connection'\n            );\n            callback();\n            return;\n        }\n        this.of[id].socket.destroy();\n    }\n\n    this.of[id] = new Client(this.config,this.log);\n    this.of[id].id = id;\n    this.of[id].path = host;\n    this.of[id].port = port;\n\n    this.of[id].connect();\n\n    callback(this);\n}\n\nmodule.exports=IPC;\n","// const buffer = 1;\n\ninterface IMapCell {\n  type: 'wall' | 'floor' | 'door' | 'nothing' | '?'\n  contents?: [];\n};\n\nconst unknownCell: IMapCell = {\n  type: '?',\n  contents: []\n}\n\n// const emptyCell: IMapCell = {\n//   type: 'nothing',\n//   contents: []\n// }\n\nconst wallCell: IMapCell = {\n  type: 'wall',\n  contents: []\n}\n\nexport default function RayCastMap(x, y) {\n  this.sizeX = x + 2;\n  this.sizeY = y + 2;\n  this.wallGrid = Array.from(Array(this.sizeY), () => new Array(this.sizeX))\n\n  for (let x2 = 0; x2 < this.sizeX; x2++){\n    for (let y2 = 0; y2 < this.sizeY; y2++){\n      // this.set(x2, y2, wallCell)\n      this.wallGrid[y2][x2] = wallCell\n    }\n  }\n\n  // randomize\n  // for (var i = 0; i < this.size * this.size; i++) {\n  //   this.wallGrid[i] = Math.random() < 0.1 ? 1 : 0;\n  // }\n\n  // make the wals\n  // for (var i = 0; i < this.size; i++) {\n  //   this.set(0, i, 1)\n  //   this.set(i, 0, 1)\n  //   this.set(this.size-1, i, 1)\n  //   this.set(i, this.size-1, 1)\n  // }\n\n}\n\nRayCastMap.prototype.set = function(x: number, y: number, v: IMapCell) {\n  x = Math.floor(x) +1;\n  y = Math.floor(y) +1;\n  this.wallGrid[y][x] = v\n};\n\nRayCastMap.prototype.get = function(x, y): IMapCell {\n  x = Math.floor(x);\n  y = Math.floor(y);\n  if (x < 0 || x > this.sizeX - 1 || y < 0 || y > this.sizeY - 1) return unknownCell;\n  return this.wallGrid[y][x]\n};\n\n// RayCastMap.prototype.cast = function(point, angle, range) {\n//   var self = this;\n//   var sin = Math.sin(angle);\n//   var cos = Math.cos(angle);\n//   var noWall = { x: 0, y:0,length2: Infinity };\n//\n//   return ray({ x: point.x, y: point.y, height: 0, distance: 0 });\n//\n//   function ray(origin) {\n//     var stepX = step(sin, cos, origin.x, origin.y);\n//     var stepY = step(cos, sin, origin.y, origin.x, true);\n//     var nextStep = stepX.length2 < stepY.length2\n//       ? inspect(stepX, 1, 0, origin.distance, stepX.y)\n//       : inspect(stepY, 0, 1, origin.distance, stepY.x);\n//\n//     if (nextStep.distance > range) return [origin];\n//     return [origin].concat(ray(nextStep));\n//   }\n//\n//   function step(rise, run, x, y, inverted = false):{\n//     x: number,\n//     y: number,\n//     length2: number\n//   } {\n//     if (run === 0) return noWall;\n//     var dx = run > 0 ? Math.floor(x + 1) - x : Math.ceil(x - 1) - x;\n//     var dy = dx * (rise / run);\n//     return {\n//       x: inverted ? y + dy : x + dx,\n//       y: inverted ? x + dx : y + dy,\n//       length2: dx * dx + dy * dy\n//     };\n//   }\n//\n//   function inspect(step, shiftX, shiftY, distance, offset) {\n//     var dx = cos < 0 ? shiftX : 0;\n//     var dy = sin < 0 ? shiftY : 0;\n//     step.height = self.get(step.x - dx, step.y - dy);\n//     step.distance = distance + Math.sqrt(step.length2);\n//     if (shiftX) step.shading = cos < 0 ? 2 : 0;\n//     else step.shading = sin < 0 ? 2 : 1;\n//     step.offset = offset - Math.floor(offset);\n//     return step;\n//   }\n// };\n//\n// RayCastMap.prototype.update = function(seconds) {\n//   if (this.light > 0) this.light = Math.max(this.light - 10 * seconds, 0);\n//   else if (Math.random() * 5 < seconds) this.light = 2;\n// };\n","export const ABSOLLUTE = 'absolute';\n\nexport type IPosition = 'absolute' | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"-webkit-sticky\" | \"fixed\" | \"relative\" | \"static\" | \"sticky\" | undefined;\n\nexport interface IStyle {\n\tclip: string;\n\theight: number;\n\tleft: number;\n\tposition: IPosition;\n\tsrc: string;\n\ttop: number;\n\twidth: number;\n\tzIndex: number;\n};\n\nexport const emptyStyle: IStyle = {\n\tclip: '',\n\theight: 0,\n\tleft: 0,\n\tposition: 'absolute',\n\tsrc: '',\n\ttop: 0,\n\twidth: 0,\n\tzIndex: 0\n}\n\ninterface ISprite {\n\tvisible: boolean;\n}\n\nexport interface IStrip {\n\tstyle: IStyle;\n  rayDistance: number;\n  id: number;\n}\n\nexport const emptyStrip: IStrip = {\n\tstyle: emptyStyle,\n  id: 0,\n\trayDistance: 0\n}\n\nvar spriteMap: any[][] = [[]];\nvar visibleSprites: ISprite[] = [];\nvar oldVisibleSprites = [];\n\nexport const screenWidth = 320;\nexport const screenHeight = 200;\n\nvar useSingleTexture = false;\nvar fov = 60 * Math.PI / 180;\n\nexport const stripWidth = 1;\n\nexport const numRays = Math.ceil(screenWidth / stripWidth);\n\nvar numTextures = 4;\nvar wallTextures = [\n\t\"walls_1.png\",\n\t\"walls_2.png\",\n\t\"walls_3.png\",\n\t\"walls_4.png\"\n];\n\nexport const viewDist = (screenWidth/2) / Math.tan((fov / 2));\nexport const twoPI = Math.PI * 2;\n\nexport const moveStepSize = 0.000000001;\nexport const rotateStepSize = .000000001;\nexport const commandQueueWaitTime = 50\n","import {IShip} from './Ship.ts';\n\nconst westDoors = [\n  {direction: 'w',\n  n: 3}\n];\n\nexport default {\n    name: 'Beebop',\n    makeMap: () => {\n      return ({\n\n        engineering: {x: 0, y:0, x2:5, y2:5},\n        bridge: {x: 6, y:0, x2:11, y2:15},\n        storage: {x: 12, y:0, x2:17, y2:10},\n        drone: {x: 18, y:0, x2:23, y2:5},\n        shop: {x: 24, y:0, x2:29, y2:5},\n        airlock: {x: 30, y:0, x2:50, y2:5},\n\n        otherRooms: [\n          {x: 12, y:6, x2:50, y2:15}\n        ],\n\n        doors: [\n          {x: 5, y: 2},\n          {x: 11, y: 2},\n          {x: 17, y: 2},\n          {x: 23, y: 2},\n          {x: 29, y: 2},\n          {x: 50, y: 2},\n          {x: 11, y: 9},\n        ]\n\n\n      });\n    }\n  };\n","import RayCastMap from \"../../lib/raycast/RayCastMap.ts\";\nimport {emptyStrip} from \"../../lib/raycast/constantsAndTypes.ts\";\n\nconst roomTypes = ['engineering', 'bridge', 'storage', 'drone', 'shop', 'airlock'];\n\nexport default (drones, shipMap) => {\n    const doors = shipMap.doors\n    const maxX = roomTypes.reduce((mm, r) => {\n      mm = shipMap[r].x2 > mm ? shipMap[r].x2 : mm\n      return mm\n    }, 0)\n\n    const maxXd = doors.reduce((mm, d) => {\n      mm = d.x > mm ? d.x : mm\n      return mm\n    }, 0)\n\n    const maxXdr = drones.reduce((mm, d) => {\n      mm = d.x > mm ? d.x : mm\n      return mm\n    }, 0)\n\n    const maxY = roomTypes.reduce((mm, r) => {\n      mm = shipMap[r].y2 > mm ? shipMap[r].y2 : mm\n      return mm\n    }, 0)\n\n    const maxYd = doors.reduce((mm, d) => {\n      mm = d.y > mm ? d.y : mm\n      return mm\n    }, 0)\n\n    const maxYdr = drones.reduce((mm, d) => {\n      mm = d.y > mm ? d.y : mm\n      return mm\n    }, 0)\n\n    const x = Math.round(Math.max(maxX, maxXd, maxXdr, 1) + 1)\n    const y = Math.round(Math.max(maxY, maxYd, maxYdr, 1))\n    const materializedMap = new RayCastMap(x, y)\n\n    roomTypes.forEach((room, ndx) => {\n      for (let x = shipMap[room].x; x < shipMap[room].x2; x++) {\n        for (let y = shipMap[room].y; y < shipMap[room].y2; y++) {\n          materializedMap.set(\n            x, y, {\n              type: '?',\n              contents: []\n            }\n          )\n        }\n      }\n    });\n\n    shipMap.doors.forEach((door, ndx) => {\n      materializedMap.set(door.x, door.y, {\n        type: 'door',\n        contents: []\n      })\n    });\n\n    return materializedMap\n  }\n","import {ABSOLLUTE, IPosition, IStrip, emptyStrip, stripWidth, screenHeight, twoPI, screenWidth} from \"../../lib/raycast/constantsAndTypes.ts\"\n\nvar numRays = Math.ceil(screenWidth / stripWidth);\nvar fov = 60 * Math.PI / 180;\nvar viewDist = (screenWidth/2) / Math.tan((fov / 2));\n\nexport default  (\n  rayAngle,\n  map,\n  player: {direction: number, x: number, y: number },\n  stripIdx\n): IStrip => {\n\n  // console.log('getRay', rayAngle)\n\n  const mapWidth = map.sizeX;\n  const mapHeight = map.sizeY;\n\n  const newStripStyle = {\n    id: stripIdx,\n    style: {\n      position: ABSOLLUTE as IPosition,\n      src: \"images/walls_3.png\",\n      height: 0, width: 0, left: 0, top: 0, zIndex: 0, clip: \"\"\n    },\n    rayDistance: 0\n  }\n\n  // first make sure the angle is between 0 and 360 degrees\n  rayAngle %= twoPI;\n  if (rayAngle < 0) rayAngle += twoPI;\n\n  // moving right/left? up/down? Determined by which quadrant the angle is in.\n  var right = (rayAngle > twoPI * 0.75 || rayAngle < twoPI * 0.25);\n  var up = (rayAngle < 0 || rayAngle > Math.PI);\n\n  var wallType = 0;\n\n  // only do these once\n  var angleSin = Math.sin(rayAngle);\n  var angleCos = Math.cos(rayAngle);\n\n  var dist = 0;\t// the distance to the block we hit\n  var xHit = 0; \t// the x and y coord of where the ray hit the block\n  var yHit = 0;\n  var xWallHit = 0;\n  var yWallHit = 0;\n\n  var textureX;\t// the x-coord on the texture of the block, ie. what part of the texture are we going to render\n  var wallX;\t// the (x,y) map coords of the block\n  var wallY;\n\n  var wallIsShaded = false;\n\n  var wallIsHorizontal = false;\n\n  // first check against the vertical map/wall lines\n  // we do this by moving to the right or left edge of the block we're standing in\n  // and then moving in 1 map unit steps horizontally. The amount we have to move vertically\n  // is determined by the slope of the ray, which is simply defined as sin(angle) / cos(angle).\n\n  var slope = angleSin / angleCos; \t// the slope of the straight line made by the ray\n  var dXVer = right ? 1 : -1; \t// we move either 1 map unit to the left or right\n  var dYVer = dXVer * slope; \t// how much to move up or down\n\n  var x = right ? Math.ceil(player.x) : Math.floor(player.x);\t// starting horizontal position, at one of the edges of the current map block\n  var y = player.y + (x - player.x) * slope;\t\t\t// starting vertical position. We add the small horizontal step we just made, multiplied by the slope.\n\n  while (x >= 0 && x < mapWidth && y >= 0 && y < mapHeight) {\n    // console.log(x, y)\n    const wallX: number = (x + (right ? 0 : -1))>>0;\n    const wallY: number = (y)>>0;\n\n    if (map.get(wallX, wallY).type === 'wall') {\n\n      var distX = x - player.x;\n      var distY = y - player.y;\n      dist = distX*distX + distY*distY;\t// the distance from the player to this point, squared.\n\n      textureX = y % 1;\t// where exactly are we on the wall? textureX is the x coordinate on the texture that we'll use later when texturing the wall.\n      if (!right) textureX = 1 - textureX; // if we're looking to the left side of the map, the texture should be reversed\n\n      xHit = x;\t// save the coordinates of the hit. We only really use these to draw the rays on minimap.\n      yHit = y;\n      xWallHit = wallX;\n      yWallHit = wallY;\n\n      // make horizontal walls shaded\n      wallIsShaded = true;\n\n      wallIsHorizontal = true;\n\n      break;\n    }\n    x = x + dXVer;\n    y = y + dYVer;\n  }\n\n  // now check against horizontal lines. It's basically the same, just \"turned around\".\n  // the only difference here is that once we hit a map block,\n  // we check if there we also found one in the earlier, vertical run. We'll know that if dist != 0.\n  // If so, we only register this hit if this distance is smaller.\n\n  var slope = angleCos / angleSin;\n  var dYHor = up ? -1 : 1;\n  var dXHor = dYHor * slope;\n  var y = up ? Math.floor(player.y) : Math.ceil(player.y);\n  var x = player.x + (y - player.y) * slope;\n\n  while (x >= 0 && x < mapWidth && y >= 0 && y < mapHeight) {\n    const wallY: number = (y + (up ? -1 : 0))>>0;\n    const wallX: number = (x)>>0;\n\n    // console.log(wallX, wallY, map.get(wallX, wallY).type)\n    if (map.get(wallX, wallY).type === 'wall') {\n      var distX = x - player.x;\n      var distY = y - player.y;\n      var blockDist = distX*distX + distY*distY;\n      if (!dist || blockDist < dist) {\n        dist = blockDist;\n        xHit = x;\n        yHit = y;\n        xWallHit = wallX;\n        yWallHit = wallY;\n        textureX = x % 1;\n        if (up) textureX = 1 - textureX;\n\n        wallIsShaded = false;\n      }\n      break;\n    }\n    x = x + dXHor;\n    y = y + dYHor;\n  }\n\n  if (dist) {\n    // console.log('dist', dist)\n    newStripStyle.rayDistance = dist\n    dist = Math.sqrt(dist);\n\n\n\n    // use perpendicular distance to adjust for fish eye\n    // distorted_dist = correct_dist / cos(relative_angle_of_ray)\n    dist = dist * Math.cos(player.direction - rayAngle);\n\n\n\n    // now calc the position, height and width of the wall strip\n\n    // \"real\" wall height in the game world is 1 unit, the distance from the player to the screen is viewDist,\n    // thus the height on the screen is equal to wall_height_real * viewDist / dist\n\n    var height = Math.round(viewDist / dist);\n\n    // width is the same, but we have to stretch the texture to a factor of stripWidth to make it fill the strip correctly\n    var width = height * stripWidth;\n\n    // top placement is easy since everything is centered on the x-axis, so we simply move\n    // it half way down the screen and then half the wall height back up.\n    var top = Math.round((screenHeight - height) / 2);\n\n    var imgTop = 0;\n    var texX = Math.round(textureX*width);\n\n    if (texX > width - stripWidth)\n      texX = width - stripWidth;\n    texX += (wallIsShaded ? width : 0);\n\n    newStripStyle.style.height = height\n    newStripStyle.style.width = (width*2)>>0;\n    newStripStyle.style.top = top - imgTop;\n    newStripStyle.style.left = stripIdx*stripWidth - texX;\n    newStripStyle.style.clip = \"rect(\" + imgTop + \"px, \" + (texX + stripWidth)  + \"px, \" + (imgTop + height) + \"px, \" + texX + \"px)\";\n\n    var dwx = xWallHit - player.x;\n    var dwy = yWallHit - player.y;\n    var wallDist = dwx*dwx + dwy*dwy;\n    newStripStyle.style.zIndex = -(wallDist*1000)>>0;\n\n\n\n    return newStripStyle\n\n  } else {\n    // console.log('no dist')\n    return newStripStyle\n  }\n};\n","import getRay from \"./getRay.ts\";\n\nimport {stripWidth, viewDist, numRays, IStrip} from \"../../lib/raycast/constantsAndTypes.ts\"\n\nexport default  (\n  map: any,\n  drone: any,\n): IStrip[] => {\n  // console.log('getRays', drone)\n  return Array.from(Array(numRays).keys()).map((i) => {\n    // where on the screen does ray go through?\n    var rayScreenPos = (-numRays/2 + i) * stripWidth;\n\n    // the distance from the viewer to the point on the screen, simply Pythagoras.\n    var rayViewDist = Math.sqrt(rayScreenPos*rayScreenPos + viewDist*viewDist);\n\n    // the angle of the ray, relative to the viewing direction.\n    // right triangle: a = sin(A) * c\n    var rayAngle = Math.asin(rayScreenPos / rayViewDist);\n\n    return getRay(\n      drone.direction + rayAngle, \t// add the players viewing direction to get the angle in world space\n      map,\n      drone,\n      i\n    );\n  })\n}\n","// import RayCastMap from \"../../lib/raycast/RayCastMap.ts\";\n// import {emptyStrip} from \"../../lib/raycast/constantsAndTypes.ts\";\nimport {moveStepSize, rotateStepSize} from \"../../lib/raycast/constantsAndTypes.ts\";\nimport getRays from \"./getRays.ts\";\n\nexport default (drones, materializedMap) => {\n\n  const updatedDrones = drones.map((drone) => {\n\n      const droneWithCorrectPosition= drone.commandQueue.reduce((mm, command) => {\n\n\n\n\n            // TODO refactor this\n            if (command.futureAction === \"DRONE_MOVE_FORWARD\"){\n\n              const roundOldX = Math.round(drone.x)\n              const roundOldY = Math.round(drone.y)\n              const newX = drone.x + Math.cos(drone.direction) * moveStepSize\n              const newY = drone.y + Math.sin(drone.direction) * moveStepSize\n              const roundNewX = Math.round(newX)\n              const roundNewY = Math.round(newY)\n\n              // check where we want to go\n              if(materializedMap.get(roundNewX, roundNewY).type === 'wall'){\n\n                // if we have moved left or right into a vertical wall\n                if(roundNewX !== roundOldX){\n                  // discard the x component of the move\n                  mm.y = newY\n                }\n\n                //  the same for Y\n                if(roundNewY !== roundOldY){\n                  mm.x = newX\n                }\n\n              } else {\n                  mm.x = newX\n                  mm.y = newY\n              }\n            }\n\n            if (command.futureAction === \"DRONE_MOVE_BACK\"){\n\n              const roundOldX = Math.round(drone.x)\n              const roundOldY = Math.round(drone.y)\n              const newX = drone.x + Math.cos(drone.direction) * -moveStepSize\n              const newY = drone.y + Math.sin(drone.direction) * -moveStepSize\n              const roundNewX = Math.round(newX)\n              const roundNewY = Math.round(newY)\n\n              // check where we want to go\n              if(materializedMap.get(roundNewX, roundNewY).type === 'wall'){\n\n                // if we have moved left or right into a vertical wall\n                if(roundNewX !== roundOldX){\n                  // discard the x component of the move\n                  mm.y = newY\n                }\n\n                //  the same for Y\n                if(roundNewY !== roundOldY){\n                  mm.x = newX\n                }\n\n              } else {\n                  mm.x = newX\n                  mm.y = newY\n              }\n            }\n\n\n\n\n            if (command.futureAction === \"DRONE_ROTATE_LEFT\"){\n                mm.direction = drone.direction - rotateStepSize\n            }\n\n            if (command.futureAction === \"DRONE_ROTATE_RIGHT\"){\n                mm.direction = drone.direction + rotateStepSize\n            }\n\n            return mm;\n      }, drone)\n\n      // console.log('droneWithCorrectPosition', droneWithCorrectPosition)\n      return droneWithCorrectPosition\n\n  }).map((drone) => {\n    drone.rays =  getRays(materializedMap, drone)\n\n    // drone.rays.forEach(ray => {\n    //     const cell = materializedMap.get(ray.endX, ray.endY)\n    //     cell.type = 'wall'\n    //     materializedMap.set(ray.endX, ray.endY, cell)\n    // });\n\n    return drone\n  })\n\n  return {\n    visibleMap: materializedMap,\n    visibleDrones: updatedDrones\n  }\n\n}\n","import getMaterializedMap from \"./raycast/getMaterializedMap.ts\";\nimport updatePositionsAndGetRaysAndMakeVisibleMap from \"./raycast/updatePositionsAndGetRaysAndMakeVisibleMap.ts\"\nimport ship0 from \"../lib/ship0.ts\"\nimport {screenWidth, emptyStrip, stripWidth} from \"../lib/raycast/constantsAndTypes.ts\"\n\nlet handlers = {}\n\nhandlers._history = []\n\nhandlers['factorial'] = async ({ num }) => {\n  handlers._history.push(num)\n\n  function fact(n) {\n    if (n === 1) {\n      return 1\n    }\n    return n * fact(n - 1)\n  }\n\n  console.log('making factorial')\n  return fact(num)\n}\n\nhandlers['ping'] = async () => {\n  console.log('pinged')\n  return 'pong'\n}\n\nhandlers['materializeMap'] = async (drones) => {\n\n  const shipMap = ship0.makeMap();\n  const materializedMap = getMaterializedMap(drones, shipMap )\n  const {visibleDrones, visibleMap}  = updatePositionsAndGetRaysAndMakeVisibleMap(drones, materializedMap)\n\n  return {\n    visibleMap,\n    drones: visibleDrones\n  }\n}\n\nexport default handlers\n","// const ipc = require('node-ipc')\nimport ipc from \"node-ipc\";\n\nfunction init(socketName, handlers) {\n  ipc.config.id = socketName\n  ipc.config.silent = true\n\n  ipc.serve(() => {\n    ipc.server.on('message', (data, socket) => {\n      let msg = JSON.parse(data)\n      let { id, name, args } = msg\n\n      if (handlers[name]) {\n        handlers[name](args).then(\n          result => {\n            ipc.server.emit(\n              socket,\n              'message',\n              JSON.stringify({ type: 'reply', id, result })\n            )\n          },\n          error => {\n            // Up to you how to handle errors, if you want to forward\n            // them, etc\n            ipc.server.emit(\n              socket,\n              'message',\n              JSON.stringify({ type: 'error', id })\n            )\n            throw error\n          }\n        )\n      } else {\n        console.warn('Unknown method: ' + name)\n        ipc.server.emit(\n          socket,\n          'message',\n          JSON.stringify({ type: 'reply', id, result: null })\n        )\n      }\n    })\n  })\n\n  ipc.server.start()\n}\n\nfunction send(name, args) {\n  ipc.server.broadcast('message', JSON.stringify({ type: 'push', name, args }))\n}\n\nexport default { init, send }\n","// let serverHandlers = require('./server-handlers')\n// let ipc = require('./server-ipc')\n\nimport  serverHandlers from \"./server-handlers\";\nimport  ipc from \"./server-ipc\";\n\nconsole.log('server.js')\nconsole.log(process.argv)\nlet socketName = process.argv[4]\n\n\nipc.init(socketName, serverHandlers)\n\n// let isDev, version\n//\n// if (process.argv[2] === '--subprocess') {\n//   isDev = false\n//   version = process.argv[3]\n//\n//   let socketName = process.argv[4]\n//   ipc.init(socketName, serverHandlers)\n// } else {\n//   let { ipcRenderer, remote } = require('electron')\n//   isDev = true\n//   version = remote.app.getVersion()\n//\n//   ipcRenderer.on('set-socket', (event, { name }) => {\n//     ipc.init(name, serverHandlers)\n//   })\n// }\n//\n// console.log(version, isDev)\n","module.exports = require(\"dgram\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"tls\");","module.exports = require(\"util\");"],"sourceRoot":""}